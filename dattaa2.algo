ALGORITHM dot
VAR
   v1,v2 : ARRAY_OF INTEGER[20];
   dort:INTEGER
   i,j:INTEGER;
BEGIN
    FOR i FROM 0 TO v1.length STEP step 1  DO
        write("enter the elements of array v1")
        read(v1[i])
    END_FOR
    FOR j FROM 0 TO v2.length STEP step 1 DO
        write("enter the elements of array v2")
        read (v2[j])
    END_FOR
    dort=:dort product(v1,v2)
   
    IF (dort=0) THEN
         write("v1 and v2 are orthogonal")
    ELSE
        write("v1 and v2 are not orthogonal")
    END_IF
    END_IF
END
FUNCTION dort product(v1,v2 : ARRAY_OF INTEGER) : INTEGER
VAR
    i,dort:INTEGER;
BEGIN
    dort:=0;
    i:=0;
    IF (v1.length<>v2.length) THEN
        write("the vectors are not equals")
    END_IF
    REPEAT
        dort:=dort+v1[i]*v2[i]
        i:=i+1
    UNTIL (i>v1.length)
    RETURN dort ;
PROCEDURE dort product(v1,v2 : ARRAY_OF INTEGER;)
VAR
    i,dort:INTEGER
BEGIN
    dort:=0
    i:=0
    IF (v1.length<>v2.length) THEN
        write("the vectors are not equals")
    END_IF
    REPEAT
        dort:=dort+v1[i]*v2[i];
        i:=i+1
    UNTIL (i>v1.length)
END
END
